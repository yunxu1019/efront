<style></style>
<div>
    <field -repeat="f in formats" -src="[f,value]"></field>
</div>
<script>
    var _value = 0;
    var parseFloat = (a, b) => new BigNumber(a, b);
    var value = {
        get 十进制() {
            return _value;
        },
        set 十进制(v) {
            _value = parseFloat(v)
        },
        get 十六进制() {
            return _value.toString(16);
        },
        set 十六进制(v) {
            _value = parseFloat(v, 16);
        },
        get 二进制() {
            return _value.toString(2);
        },
        set 二进制(v) {
            _value = parseFloat(v, 2);
        },
        get 八进制() {
            return _value.toString(8)
        },
        set 八进制(v) {
            _value = parseFloat(v, 8)
        },
        get 三十六进制() {
            return _value.toString(36);
        },
        set 三十六进制(v) {
            _value = parseFloat(v, 36);
        },
        get 浮点数机器码() {
            var v = +_value;
            var s = /^-/.test(v);
            if (s) v = -v;
            var i = Math.log2(v) | 0;
            if (!v) i = 0;
            else v = v * Math.pow(2, 23 - i) - (1 << 23), i = i + 127;
            v = s << 31 | i << 23 | v & 0x7fffff;
            return [v >> 24 & 0xff, v >> 16 & 0xff, v >> 8 & 0xff, v & 0xff].map(hex).join('');
        },
        set 浮点数机器码(v) {
            v = parseInt(v, 16);
            var s = v >> 31;
            var i = v >> 23 & 0xff;
            v = 0x7fffff & v | 0x800000;
            if (i === 0 && v === 0) v = 0;
            else v = v * Math.pow(2, i - 126 - 24);
            if (s) v = -v;
            _value = v;
        },
        get 双精度机器码() {
            var s = /^-/.test(_value);
            var v = window.parseFloat(_value);
            if (s) v = -v;
            var i = Math.log2(v) | 0;
            if (!v) i = 0;
            else v = (v * Math.pow(2, -i) - 1) * Math.pow(2, 52), i += 1023;
            return [
                s << 7 | (i >> 4 & 0x7f),
                (i & 0xf) << 4 | v / Math.pow(2, 48) & 0xff,
                v / Math.pow(2, 40) & 0xff,
                v / Math.pow(2, 32) & 0xff,
                v >> 24 & 0xff, v >> 16 & 0xff,
                v >> 8 & 0xff, v & 0xff
            ].map(hex).join('');
        },
        set 双精度机器码(v) {
            var s = parseInt(v[0], 16) >> 3;
            var i = parseInt(v.slice(0, 3), 16) & 0x7ff;
            v = parseInt(v.slice(3), 16);
            if (i === 0 && v === 0) v = 0;
            else v = (v + Math.pow(2, 53)) * Math.pow(2, i - 1023 - 53);
            if (s) v = -v;
            _value = v;
        },

    };
    var hex = a => a < 0x10 ? "0" + a.toString(16) : a.toString(16);
    var formats = Object.getOwnPropertyNames(value).map(k => {
        return { name: k, key: k };
    });

</script>